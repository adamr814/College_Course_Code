*** 8/25/23 ***

Operating systems:
objectives of an operating system
- convenience for the user
- efficient operation of the computer
- ability to evolve

1 and 2 conflict so we look for compromises between them based on machine usage (windows NT 3.51 vs windows NT 4.0 or windows 98 vs windows xp)

Notes:
according to some authors, the os is the kernel and everything else is an application

what about loadable device drivers (i.e. modules in Linux) vs Monolithic kernels?

Tasks:
- program development (command interpreter (shell) GUI etc)
- program management/execution
- I/O device management
- File management
- System access (main memory management, networking, etc)
- Error detection
- Accounting
- Protection
- Shared Memory (SMP systems)
- Message passing

Dual mode operation (two levels of commands)
1. User mode - given to users and their programs
2. privileged mode - given to the os

All I/O instructions are privileged instructions. Users programs that require I/O must request the I/O from the os

CPU protection is provided by a timer (To prevent a program with an infinite loop from hogging the CPU for evermore. Obviously this timer
cannot protect the user from an infinite loop)

Discussion: since the OS is given unrestricted access to the system (memory, CPU, disk, etc) could a terrorist org use this to crash America's
information network

Structure:
- a well structured os design improved maintainability can simplify the design and development process, and eases verification and validation
generally well structured means a layered design

However, layering decreases efficiency by forcing extra function calls (each function call typically requires storage of the machine's state)

Examples: 
- MSDOS - Poorly structured. levels of functionality and interfaces are not well defined or separated, user written programs can directly access
the hardware
- unix - originally had little structuring (not much better than MSDOS) newer versions have better/ more structuring
- os/2

Types:
1. batch systems
    jobs sorted by hand
    jobs were primarily CPU intensive
    spoolers are batch systems
2. Multi-programmed batch systems
    use a job pool (on tape, disk, or in memory) to better use of system resources, jobs are swapped in and out to keep CPU busy
    requires some form of job scheduling
3. Time-Sharing
    time limit or I/O causes a job swap
    Requires an on-line file system (disk)
    provides an interactive environment

Parallel Systems:
    Asymmetric - Different processors have different tasks
    - front-end machine - like a keyboard buffer
    - back end machine - like a disk controller chip or graphics accelerator chip

    Symmetric - (SMP) processors run identical copies of the os, but the actual jobs may be different
    - the safeguard site in ND

Distributed systems:
    - each processing node is a different machine, all connected by a network
    - a linux print server would fall into this category.

Interrupts:
    Four types:
    1. Software - generated by the software (system calls)
    2. Timers - Generated by timer (ie CPU)
    3. I/O - Generated by an I/O controller
    4. Hardware - Generated by the hardware (usually for some failure).

Notes:
- interrupts disable (delay) other activities until the current interrupt has finished
- interrupts force the machine state to be saved (costs CPU cycles)
- interrupt service (interrupt-handler) routine locations (addresses) may be stored in a look-up table (LUT)
called an interrupt vector (DOS and UNIX)

I/O:
    DMA:
    - due to the overhead associated with I/O (transfer a byte, check for errors, set flags and pointers etc) a faster
    method of data transfer can be of use. This is especially true for devices that must transfer large blocks of data into main memory.

    - the DMA device transfers data on its own to the appropriate memory locations.
    The cpu is left free to do other tasks

    - however since the memory controller can only transfer one word at a time, if the cpu requires memory access it will be
    delayed until the DMA transfer is completed

    Memory Mapped I/O and ports:
    - Memory mapped I/O and ports are primarily used to ease access to the various devices.

*** 8/28/23 ***

it is okay to leave the file type in the homework, don't include the section titles.

